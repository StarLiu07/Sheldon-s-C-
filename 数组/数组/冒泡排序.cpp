#include<iostream>
using namespace std;

//冒泡排序作用：最常用的排序算法，对数组内元素进行排序
/*
* 1.比较相邻的元素，如果第一个比第二个大就交换他们两个
* 2.对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值
* 3.重复以上步骤，每次比较次数-1，知道不需要比较
*/

int main5() {

	//利用冒泡排序实现升序排列
	int arr[9] = { 4,2,8,0,5,7,1,3,9 };
	cout << "排序前：" << endl;
	for (int i = 0; i < 9; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;

	//开始冒泡排序
	//排序的总轮数=元素个数-1
	//每轮对比的次数=元素个数-排序轮数-1
	for (int i = 0; i < 9 - 1; i++)//此处的i为排序轮数
	{
		//内层循环对比
		for (int j = 0; j < 9 - i - 1; j++)//此处的j为每轮对比次数
		{
			//如果第一个数字比第二个数字打，交换这两个数字
			if (arr[j] > arr[j + 1])//j的初始值为0，所以这就是比较arr[0]和arr[1]，并以此类推
			{
				int temp = arr[j];//建立一个临时变量存储元素
				arr[j] = arr[j + 1];//第34行与35行开始交换
				arr[j + 1] = temp;
			}
		}
	}
	//排序后结果
	cout << "排序后结果" << endl;
	for (int i = 0; i < 9; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
	

	system("pause");

	return 0;
}