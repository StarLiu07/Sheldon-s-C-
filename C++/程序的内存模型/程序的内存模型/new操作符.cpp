#include<iostream>
using namespace std;

//c++利用new操作符在堆区中开辟数据
//堆区开辟的数据，由程序员手动开辟，手动释放，释放利用操作符delete
//语法：new 数据类型
//利用new创建的数据，会返回该数据对应的类型的指针

//1.new的基本语法
int* func()
{
	//在堆区创建一个整形的数据
	//new返回的是该数据类型的指针
	int*p = new int(10);//开辟一个堆区，并用一个指针指向它
	*p = 20;//这里要加*是因为p是一个指针，不是数组名（39行做对比）
	
	return p;//在函数结束时，指针p由于是局部变量，所以被释放，但地址却被保存在堆区中
}

void test01()
{
	int* p = func();//接收存放在堆区中的地址
	cout << *p << endl;
	//堆区的数据由程序员开辟，程序员释放
	//如果想释放堆区的数据，可以用关键字delete
	delete p;

	//cout << *p << endl; //这时放在堆区中的地址已被删除，再输出将会报错
}
//2.在堆区用new来开辟数组
void test02()
{
	//在堆区创建10个整型变量的数组
	int*arr = new int[10];//10代表数组有10个元素  将会返回一个首地址

	for (int i = 0; i < 10; i++)
	{
		arr[i] = i + 100;//给10个数据赋值100~109
		//这里arr没有加*是因为arr是数组名，不是指针，数组名只有当实参时才能当指针（15行做对比）
	}

	for (int j = 0; j < 10; j++)
	{
		cout << "第" << j + 1 << "个：" << arr[j] << endl;
	}

	//释放堆区数组
	//因为释放的是数组，所以释放的时候要加[]
	delete[] arr;

}

int main() {

	test01();

	test02();

	system("pause");

	return 0;
}